package com.hwc.member.view.fragment;

import android.content.Intent;
import android.graphics.drawable.ColorDrawable;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.RelativeLayout;

import com.huimodel.api.base.Discovery;
import com.hwc.member.R;
import com.hwc.member.adapter.BustlingProductListAdapter;
import com.hwc.member.presenter.FindFragPresenter;
import com.hwc.member.view.activity.bustling.RareProductInfoActivity;
import com.hwc.member.view.activity.view.IFindView;
import com.hwc.member.view.base.FormBaseFragment;
import com.hwc.member.widget.PullToRefreshFooter;
import com.hwc.member.widget.PullToRefreshHeadView;
import com.lidroid.xutils.view.annotation.ViewInject;

import java.util.ArrayList;
import java.util.List;

import in.srain.cube.views.loadmore.LoadMoreContainer;
import in.srain.cube.views.loadmore.LoadMoreHandler;
import in.srain.cube.views.loadmore.LoadMoreListViewContainer;
import in.srain.cube.views.ptr.PtrDefaultHandler;
import in.srain.cube.views.ptr.PtrFrameLayout;
import in.srain.cube.views.ptr.PtrHandler;

public class Find_Fragment  extends FormBaseFragment implements IFindView{

	@ViewInject(R.id.load_more_list_view_ptr_frame)
	private PtrFrameLayout mPtrFrameLayout;

	@ViewInject(R.id.load_more_container)
	LoadMoreListViewContainer load_more_container;

	@ViewInject(R.id.listview)
	private ListView mListView;


	@ViewInject(R.id.nodata_rl)
	private RelativeLayout  nodata_rl;
	


    private BustlingProductListAdapter bustlingProductListAdapter;
    private List<Discovery> discoveryList; 
    private int mCurIndex = 1;//小标 从第一页开始
	private FindFragPresenter presenter = new FindFragPresenter(this);
	@Override
	protected void init() {
		// TODO Auto-generated method stub
		
		
		discoveryList = new ArrayList<Discovery>();
		bustlingProductListAdapter = new BustlingProductListAdapter(getActivity(), discoveryList, R.layout.item_bustlingproduct, null);
	    mListView.setAdapter(bustlingProductListAdapter);
	    mListView.setDivider(new ColorDrawable(getResources().getColor(R.color.gray0)));
	    mListView.setDividerHeight(1);

		PullToRefreshHeadView headView = new PullToRefreshHeadView(getContext());
		headView.setLastUpdateTimeKey(this.getClass().getSimpleName());
		mPtrFrameLayout.setHeaderView(headView);
		mPtrFrameLayout.addPtrUIHandler(headView);
		mPtrFrameLayout.setPtrHandler(new PtrHandler() {
			@Override
			public boolean checkCanDoRefresh(PtrFrameLayout frame, View content, View header) {

				return PtrDefaultHandler.checkContentCanBePulledDown(frame, mListView, header);
			}

			@Override
			public void onRefreshBegin(PtrFrameLayout frame) {
				presenter.refresh();
			}
		});

		load_more_container.setAutoLoadMore(true);
		final PullToRefreshFooter footer = new PullToRefreshFooter(getContext());
		load_more_container.setLoadMoreView(footer);
		load_more_container.setLoadMoreUIHandler(footer);

		// binding view and data
		load_more_container.setLoadMoreHandler(new LoadMoreHandler() {
			@Override
			public void onLoadMore(LoadMoreContainer loadMoreContainer) {
				mCurIndex = mCurIndex + 1;
				presenter.more(mCurIndex);
			}
		});


		showProgressDialog(null);
		presenter.refresh();

	        
	        mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {

				@Override
				public void onItemClick(AdapterView<?> parent, View view, int position,
						long id) {
					// TODO Auto-generated method stub
					try {
						if (discoveryList.get(position).getContent_url() != null) {
							Intent intent = new Intent();
							intent.putExtra("attention", discoveryList.get(position).getAttention());
							intent.putExtra("id", discoveryList.get(position).getId());
							intent.putExtra("url", discoveryList.get(position).getContent_url());
							intent.putExtra("img", discoveryList.get(position).getPics().get(0));
							intent.putExtra("title", discoveryList.get(position).getTitle());
							intent.putExtra("excerpt", discoveryList.get(position).getExcerpt());
							intent.putExtra("share_title", discoveryList.get(position).getShare_title());
							intent.setClass(mContext, RareProductInfoActivity.class);
							startActivityForResult(intent, 100);
						}
					} catch (Exception e) {
						T("该资讯已经下了");
					}
				}
			
	        
	        });
	}


	
	

	@Override
	public int getLayoutId() {
		// TODO Auto-generated method stub
		return R.layout.fm_find;
	}

	
	
	
	
	
	@Override
	public void refresh(List<Discovery> list) {
		// TODO Auto-generated method stub


		GONE(nodata_rl);
		VISIBLE(load_more_container);
		discoveryList.clear();
		discoveryList.addAll(list);
		bustlingProductListAdapter.notifyDataSetChanged();
		mPtrFrameLayout.refreshComplete();
		// load more
		if (discoveryList.size() <= 0) {
			showErrorPage();
		} else if (discoveryList.size() < 5) {
			load_more_container.loadMoreFinish(true, false);
		} else {
			load_more_container.loadMoreFinish(false, true);
		}
		mCurIndex = 1;
	}

	@Override
	public void more(List<Discovery> list, boolean isEnd) {
		// TODO Auto-generated method stub
//		if(isEnd){
//			discoveryList.addAll(list);
//			bustlingProductListAdapter.notifyDataSetChanged();
//		}
//
//		find_refres.onPullDownRefreshComplete();
//		find_refres.onPullUpRefreshComplete();
//		find_refres.setHasMoreData(isEnd);


		discoveryList.addAll(list);
		mPtrFrameLayout.refreshComplete();
		// load more
		load_more_container.loadMoreFinish(false, isEnd);
		bustlingProductListAdapter.notifyDataSetChanged();
	}


	@Override
	public void clearLoadPage() {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void showErrorPage() {
		// TODO Auto-generated method	 stub
		discoveryList.clear();
		GONE(load_more_container);
		bustlingProductListAdapter.notifyDataSetChanged();
		VISIBLE(nodata_rl);
	}
	

}
