package com.hwc.member.util;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;

import com.baidu.location.BDLocationListener;
import com.baidu.location.LocationClient;
import com.baidu.location.LocationClientOption;
import com.baidu.location.LocationClientOption.LocationMode;

/**
 * @version 2015-6-29
 * @author FZ
 * @Mark 百度地图地位工具类
 */
public class LocationUtil {

	private static LocationClient client;

	private static BDLocationListener locationListener;// 定位回调接口

	private static String coorType = "bd09ll";

	/** 初始化定位相关参数 **/
	public static void initLocation(Context context) {
		if (client == null) {
			Context applicationContext = context.getApplicationContext();
			client = new LocationClient(applicationContext);
			LocationClientOption option = new LocationClientOption();
			option.setLocationMode(LocationMode.Hight_Accuracy);// 设置定位模式
			option.setCoorType(coorType);// 返回的定位结果是百度经纬度,默认值gcj02
			option.setScanSpan(1000);//设置发起定位请求的间隔时间为5000ms
			option.setIsNeedAddress(true);// 返回的定位结果包含地址信息
			option.setNeedDeviceDirect(false);// 返回的定位结果包含手机机头的方向
			client.setLocOption(option);
		}
	}

	/**
	 * 发起定位请求定位，调用时注意控制调用频度，最低不低于1000ms<br>
	 * 
	 * 未设置BDLocationListener时，总接收参入的BDLocationListener参数，<br>
	 * 设置BDLocationListener时，若参数为空则不接收，若为非空且与设置的不同时才接收
	 * 
	 **/
	public static int requestLocation(BDLocationListener bdLocationListener) {
		if (locationListener == null || (bdLocationListener != null && bdLocationListener != locationListener)) {
			if (locationListener != null) {
				client.unRegisterLocationListener(locationListener);
			}
			locationListener = bdLocationListener;
		}

		if (locationListener == null) {
			throw new NullPointerException("定位回调参数不能为Null");
		} else {
			client.registerLocationListener(locationListener);
		}

		if (!client.isStarted()) {
			client.start();
			return -1;
		} else {
			return client.requestLocation();
		}
	}

	/** 发起定位请求定位，回调接口已经传入时，可以不再次传入 **/
	public static int requestLocation() {
		return requestLocation(null);
	}

	/** 设置经纬度模型 **/
	public static void setCoorType(String coorType) {
		LocationUtil.coorType = coorType;
	}

	/** 停止百度定位功能 **/
	public static void stop() {
		if (client != null) {
			client.stop();
		}
	}

	/** 设置新的定位回调接口 **/
	public static void setLocationListener(BDLocationListener locationListener) {
		LocationUtil.locationListener = locationListener;
	}

	/**
	 * 获取版本号
	 * 
	 * @return 当前应用的版本号
	 */
	public static String getVersionForCode(Context context) {
		try {
			PackageManager manager = context.getPackageManager();
			PackageInfo info = manager.getPackageInfo(context.getPackageName(), 0);
			String version = info.versionName;
			return version;
		} catch (Exception e) {
			e.printStackTrace();
			return "";
		}
	}

}
