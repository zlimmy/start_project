/**
 * 
 */
package com.hwc.member.view.fragment;

import android.app.Activity;
import android.content.Intent;
import android.graphics.BitmapFactory;
import android.view.LayoutInflater;
import android.view.View;
import android.view.animation.AlphaAnimation;
import android.widget.AbsListView;
import android.widget.AbsListView.OnScrollListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.baidu.location.BDLocation;
import com.baidu.location.BDLocationListener;
import com.google.gson.Gson;
import com.huimodel.api.base.Advert;
import com.huimodel.api.base.Jump;
import com.huimodel.api.base.ResponseBase;
import com.hwc.member.R;
import com.hwc.member.adapter.HotGoodsAdapter;
import com.hwc.member.adapter.MainProductsAdapter;
import com.hwc.member.application.App;
import com.hwc.member.bean.GetTuiMessage;
import com.hwc.member.bean.MLocation;
import com.hwc.member.common.Constant;
import com.hwc.member.common.Member;
import com.hwc.member.common.Mlocation;
import com.hwc.member.presenter.NewMainPresenter;
import com.hwc.member.util.CommonUtils;
import com.hwc.member.util.ImageTools;
import com.hwc.member.util.LocationUtil;
import com.hwc.member.util.MyRefreshListener;
import com.hwc.member.util.PreferenceUtils;
import com.hwc.member.util.TimeUtil;
import com.hwc.member.view.activity.CaptureActivity;
import com.hwc.member.view.activity.DialogLoginActivity;
import com.hwc.member.view.activity.SearchActivity;
import com.hwc.member.view.activity.luckdraw.PlatFormScratchActivity;
import com.hwc.member.view.activity.luckdraw.PlatFormTurntableActivity;
import com.hwc.member.view.activity.my.LocationAddressActivity;
import com.hwc.member.view.activity.my.MessageActivity;
import com.hwc.member.view.activity.my.ShareActivity;
import com.hwc.member.view.activity.product.HotProductListActivity;
import com.hwc.member.view.activity.product.NewProductInfoActivity;
import com.hwc.member.view.activity.shop.ShopCarActivity;
import com.hwc.member.view.activity.shop.ShopIndexActivity;
import com.hwc.member.view.activity.view.IMainFragView;
import com.hwc.member.view.base.FormBaseFragment;
import com.hwc.member.widget.LoadMoreContainerGridViewWithHeader;
import com.hwc.member.widget.MyAdGallery;
import com.hwc.member.widget.MyAdGallery.MyOnItemClickListener;
import com.hwc.member.widget.MyGridView;
import com.hwc.member.widget.PullToRefreshFooter;
import com.hwc.member.widget.PullToRefreshHeadView;
import com.hwc.member.widget.ScrollGridViewWithFooter;
import com.lidroid.xutils.DbUtils;
import com.lidroid.xutils.db.sqlite.Selector;
import com.lidroid.xutils.exception.DbException;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;

import java.util.Date;
import java.util.List;

import in.srain.cube.views.loadmore.LoadMoreContainer;
import in.srain.cube.views.loadmore.LoadMoreHandler;
import in.srain.cube.views.ptr.PtrDefaultHandler;
import in.srain.cube.views.ptr.PtrFrameLayout;
import in.srain.cube.views.ptr.PtrHandler;

/**
 * @author FZ
 * 主页
 */
public class NewMainFragment extends FormBaseFragment implements IMainFragView {

	@ViewInject(R.id.load_more_grid_view_ptr_frame)
	private PtrFrameLayout mPtrFrameLayout;
	@ViewInject(R.id.load_more_grid_view)
	private ScrollGridViewWithFooter mGridView;
	@ViewInject(R.id.load_more_grid_view_container)
	private LoadMoreContainerGridViewWithHeader load_more_grid_view_container;

	@ViewInject(R.id.load_page)
	private View load_page;
	@ViewInject(R.id.load_error_page)
	private View load_error_page;



	@ViewInject(R.id.msg_iv)
	private ImageView msg_iv;
	@ViewInject(R.id.city_tv)
	private TextView city_tv;
	@ViewInject(R.id.head_rl)
	private LinearLayout head_rl;
	@ViewInject(R.id.shopcar_iv)
	private ImageView shopcar_iv;
	@ViewInject(R.id.up_iv)
	private ImageView up_iv;
	private List<Advert> madlist;
	private NewMainPresenter presenter = new NewMainPresenter(this);
	private boolean flag = false;
	private boolean iscanmore = true;
	private int page = 1;
	private View headView;
	private RelativeLayout ad_ll;
	private MyGridView gridview;
	private MyAdGallery<String> myAdGallery;
	private LinearLayout ovalLayout;
	private RelativeLayout nogoods_rl;
	private MyRefreshListener myRefreshListener;
	private int myLastVisiblePos;

	@Override
	protected void init() {
		headView = LayoutInflater.from(getContext()).inflate(R.layout.fragment_new_main_header, null);
		ad_ll = (RelativeLayout) headView.findViewById(R.id.ad_ll);
		gridview = (MyGridView) headView.findViewById(R.id.gridview);
		myAdGallery = (MyAdGallery<String>) headView.findViewById(R.id.image_wall_gallery);
		ovalLayout = (LinearLayout) headView.findViewById(R.id.ovalLayout);
		nogoods_rl= (RelativeLayout) headView.findViewById(R.id.nogoods_rl);
		mGridView.addHeaderView(headView);

		getPosition();
		presenter.autologin();
		setUnReadMsg();
		checkMsg();
	}

	@Override
	public int getLayoutId() {
		return R.layout.fragment_new_main;
	}

	@Override
	public void initListener() {
		myAdGallery.setMyOnItemClickListener(new MyOnItemClickListener() {

			@Override
			public void onItemClick(int curIndex) {
				if (madlist.get(curIndex).getCat().equals("web")) {
					if (madlist.get(curIndex).getJump_url() != null) {
						goTo(ShareActivity.class, "广告详情", "赶紧分享优惠活动给好友=。=",
								"http://xs01.meituan.net/waimai_i/img/resource/weixinshare1.0c707072.png",
								madlist.get(curIndex).getJump_url());
					}
				} else if (madlist.get(curIndex).getCat().equals("app")) {
					Jump jump = new Gson().fromJson(madlist.get(curIndex).getJump_url(), Jump.class);
					if (jump != null) {
						if (jump.getPage().equals("prom")) {
							// 抽奖
							if (jump.getType().equals("SCR")) {
								goTo(PlatFormScratchActivity.class, jump.getCode());
							} else if (jump.getType().equals("TURN")) {
								goTo(PlatFormTurntableActivity.class, jump.getCode());
							}
						} else if (jump.getPage().equals("1003")) {
							goTo(HotProductListActivity.class, jump.getKey(), "热卖商品");
						} else if (jump.getPage().equals("1001")) {
							goTo(MessageActivity.class);
						} else if (jump.getPage().equals("shop")) {
							goTo(ShopIndexActivity.class, Long.parseLong(jump.getCode()));
						}
					}
				}
			}
		});

//		pmgridview.setOnRefreshListener(new OnRefreshListener<GridViewWithHeaderAndFooter>() {
//
//			@Override
//			public void onPullDownToRefresh(
//					PullToRefreshBase<GridViewWithHeaderAndFooter> refreshView) {
//				getPosition();
//			}
//
//			@Override
//			public void onPullUpToRefresh(
//					PullToRefreshBase<GridViewWithHeaderAndFooter> refreshView) {
//				}
//			});


		PullToRefreshHeadView headView = new PullToRefreshHeadView(getContext());
		headView.setLastUpdateTimeKey(this.getClass().getSimpleName());
		mPtrFrameLayout.setHeaderView(headView);
		mPtrFrameLayout.addPtrUIHandler(headView);
		mPtrFrameLayout.setPtrHandler(new PtrHandler() {
			@Override
			public boolean checkCanDoRefresh(PtrFrameLayout frame, View content, View header) {

				return PtrDefaultHandler.checkContentCanBePulledDown(frame, mGridView, header);
			}

			@Override
			public void onRefreshBegin(PtrFrameLayout frame) {
				restgetPosition();
			}
		});

		load_more_grid_view_container.setAutoLoadMore(true);
		PullToRefreshFooter footer = new PullToRefreshFooter(getContext());
		load_more_grid_view_container.setLoadMoreView(footer);
		load_more_grid_view_container.setLoadMoreUIHandler(footer);
//		mGridView.setAdapter(adapter);//要先设置footview在设置adapter
		// binding view and data
		load_more_grid_view_container.setLoadMoreHandler(new LoadMoreHandler() {
			@Override
			public void onLoadMore(LoadMoreContainer loadMoreContainer) {
			}
		});

		load_more_grid_view_container.loadMoreFinish(false,false);

		myLastVisiblePos = mGridView.getFirstVisiblePosition();
		mGridView.setOnScrollListener(new OnScrollListener() {
			
			@Override
			public void onScroll(AbsListView view, int firstVisibleItem,  
					int visibleItemCount, int totalItemCount) {
				 int currentFirstVisPos = view.getFirstVisiblePosition();
		            if(currentFirstVisPos > myLastVisiblePos) {
		                //下拉
		            	if (up_iv.getVisibility() != View.GONE) {
							AlphaAnimation aa = new AlphaAnimation(1.0f, 0.0f);
							aa.setDuration(1000);
							aa.setFillAfter(false);
							up_iv.startAnimation(aa);
							GONE(up_iv);
							flag = false;
						}
		            	
		            }
		            if(currentFirstVisPos < myLastVisiblePos) {
		                //上拉
		        		if (!flag) {
							AlphaAnimation aa = new AlphaAnimation(0.0f, 1.0f);
							aa.setDuration(1000);
							aa.setFillAfter(false);// 该方法用于设置一个动画效果执行完毕后，View对象保留在终止的位置。设置成true的话控件原先位置会保留监听事件，暂时设置成false解决该问题
							up_iv.startAnimation(aa);
							VISIBLE(up_iv);
							flag = true;
						}
		            }
		            
		            if (currentFirstVisPos==0 && myLastVisiblePos==0) {
		            	if (up_iv.getVisibility() != View.GONE) {
							AlphaAnimation aa = new AlphaAnimation(1.0f, 0.0f);
							aa.setDuration(1000);
							aa.setFillAfter(false);
							up_iv.startAnimation(aa);
							GONE(up_iv);
							flag = false;
						}
					}

		            myLastVisiblePos = currentFirstVisPos;

		            }

			@Override
			public void onScrollStateChanged(AbsListView view, int scrollState) {

			}
			
		});
		mGridView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				if(position>=2){
					goTo(NewProductInfoActivity.class, presenter.hladapter.getItem(position-2).getPid(),
							presenter.hladapter.getItem(position-2).getShop_id(), presenter.hladapter.getItem(position-2).getName());
				}
			}
		});
		gridview.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				goTo(HotProductListActivity.class, presenter.adapter.getItem(position).getPa(),
						presenter.adapter.getItem(position).getDescript());
			}
		});

		city_tv.setOnClickListener(new View.OnClickListener(){

			@Override
			public void onClick(View v) {
				Intent intent = new Intent(mContext, LocationAddressActivity.class);
				startActivityForResult(intent, 1001);
			}
		});
	}

	@OnClick(R.id.up_iv)
	public void goUp(View v) {
//		scrollview.scrollTo(0, 0);
		mGridView.setSelection(0);
	}

	@OnClick(R.id.shopcar_iv)
	public void goShopCar(View v) {
		if (Member.isNull()) {
			goTo(DialogLoginActivity.class);
		} else {
			goTo(ShopCarActivity.class);
		}
	}



	@OnClick(R.id.search_ll)
	public void goSearch(View v) {
		goTo(SearchActivity.class);
	}

	@OnClick(R.id.qr_iv)
	public void goCapture(View v) {
		 goTo(CaptureActivity.class);
	}
	

	@OnClick(R.id.msg_iv)
	public void goMsg(View v) {
		if (Member.isNull()) {
			goTo(DialogLoginActivity.class);
		} else {
			goTo(MessageActivity.class);
		}
	}


	@Override
	public void setPromAd(List<Advert> adList, int[] pic) {
		madlist = adList;
		myAdGallery.clearDisappearingChildren();
		ovalLayout.removeAllViews();
		CommonUtils.setAdGallery(myAdGallery, mContext, adList, pic, ovalLayout);
	}

	@Override
	public void setMenu(HotGoodsAdapter adapter) {
		gridview.setAdapter(adapter);
	}

	@Override
	public void setGridAdapter(MainProductsAdapter adapter) {
		mPtrFrameLayout.refreshComplete();
		mGridView.setAdapter(adapter);
		adapter.notifyDataSetChanged();
	}

	@Override
	public void setIsCanMore(boolean b) {
		iscanmore = b;
	}

	public void setUnReadMsg() {
		// 读取未阅读的消息
		List<GetTuiMessage> list; //.where("ishow", "=", false),
		try {
			DbUtils mdb = DbUtils.create(App.mContext, Constant.dbName);
	
			list = mdb.findAll(Selector.from(GetTuiMessage.class).where("ishow", "=", false).and("mobile", "=", Member.getInstance().getMobile()));
			if (list != null && list.size() >= 0) {
				if (list.size() == 0) {
					msg_iv.setImageResource(R.drawable.white_message);
				} else {
					msg_iv.setImageBitmap(ImageTools.picText(
							BitmapFactory.decodeResource(this.mContext.getResources(), R.drawable.white_message),
							list.size() + "", 1, 1));
				}
			} else {
				System.out.println("数据为空");
			}
		} catch (DbException e) {
			e.printStackTrace();
		}
		if (Constant.shopcareNum == null || Constant.shopcareNum == 0) {
			shopcar_iv.setImageResource(R.drawable.icon_gouwuche);
		} else {
			shopcar_iv.setImageBitmap(ImageTools.picText(
					BitmapFactory.decodeResource(this.mContext.getResources(), R.drawable.icon_gouwuche), "", 0.32, 2));
		}
	}

	/**
	 * 判断临时消息变量，如果有消息的情况下需要跳转对应界面
	 */
	// 1001 消息列表 1002商品列表 1003 热卖商品列表 1004发现 1005刮刮乐,1006转盘
	public void checkMsg() {
		if (Constant.gm != null) {
			if (Constant.gm.getTag() == 2) {// 2标签标识需要跳转
				switch (Constant.gm.getActivity()) {
				case 1001:// 消息列表
					goTo(MessageActivity.class);
					Constant.gm = null;
					break;
				case 1002:// 1002商品列表
					T("商品列表");
					break;
				case 1003:// 1003 热卖商品列表 HotProductListActivity //需要传关键字
							// page=1003,key=邦华V95
					T("热卖商品列表");
					break;
				case 1004:// 1004 发现
					T("1004 发现"); // 跳转 Bustling_Fragment
					break;
				case 1005:// 刮刮乐 // page=prom,type=SCR|TURN,code=1000
					T("刮刮乐");
					break;
				case 1006:// 大转盘 // page=prom,type=SCR|TURN,code=1000
					T("大转盘");
					break;
				default:
					break;
				}
			}
		}
	}

	@Override
	public void onResume() {
		setUnReadMsg();
		presenter.getCartList();
		super.onResume();
	}

	// 定位
	public void getPosition() {
		LocationUtil.requestLocation(new BDLocationListener() {
			@Override
			public void onReceiveLocation(BDLocation arg0) {
				LocationUtil.stop();
				MLocation mLocation = new MLocation();
				if(arg0.getLatitude()==4.9E-324){
					mLocation.setId(0);
				}else{
					T("还是定位到了"+arg0.getLatitude());
					mLocation.setId(1);
					mLocation.setCity(arg0.getAddress().city);
					mLocation.setDistrict(arg0.getAddress().district);
					mLocation.setLatitude(arg0.getLatitude() + "");
					mLocation.setLongitude(arg0.getLongitude() + "");
					city_tv.setText(mLocation.getCity());
					PreferenceUtils.setPrefInt(App.mContext, "Id",mLocation.getId());
					PreferenceUtils.setPrefString(App.mContext, "city",mLocation.getCity());
					PreferenceUtils.setPrefString(App.mContext, "district", mLocation.getDistrict());
					PreferenceUtils.setPrefString(App.mContext, "latitude", mLocation.getLatitude());
					PreferenceUtils.setPrefString(App.mContext, "longitude", mLocation.getLongitude());
					Mlocation.setMlocation(mLocation);
				}

				presenter.validateLocation();

			}

		});

	}

	/**
	 *重新获取定位
	 */
	public void restgetPosition(){

		if( Mlocation.isNull()){//定位失败
			Intent intent = new Intent(mContext, LocationAddressActivity.class);
			startActivityForResult(intent, 1001);
		}else{

			if(Mlocation.getInstance().getDistrict()!=null){
				city_tv.setText(Mlocation.getInstance().getDistrict());
			}else{
				city_tv.setText(Mlocation.getInstance().getCity());
			}

			page = 1;
			presenter.setHomeData();
			presenter.getProducts(page, null);
//			pmgridview.setHasMoreData(true);
			load_more_grid_view_container.loadMoreFinish(false,false);
		}


	}



	public void appEntryPushStack(String Latitude,String Longitude){
		String flag = PreferenceUtils.getPrefString(mContext, "appEntryPushStack", "N");
		if(flag.equals("N")){//
			presenter.appEntryPushStack(Constant.IMEI, Longitude, Latitude);
		}else if(flag.equals(TimeUtil.getDateString(new Date()))){
		}else{
			presenter.appEntryPushStack(Constant.IMEI, Longitude, Latitude);
		}
	}
	


	@Override
	public void notifyCarNum() {
		setUnReadMsg();
	}

	@Override
	public void clearLoadPage() {
//		pmgridview.onPullDownRefreshComplete();
//		setLastUpdateTime();
		load_page.setVisibility(View.GONE);
	}


	@OnClick(R.id.load_error_page)
	public void Reloading(View v) {
		VISIBLE(load_page);
		init();
	}


	@Override
	public void showErrorPage() {
		GONE(load_page);
		VISIBLE(load_error_page);
	}


	@Override
	public void validateLocation(ResponseBase responseBase) {
		if(responseBase.isSuccess()){
			T("定位成功");
			restgetPosition();
		}else{//定位失败 需要打开地址选择界面
//			T("定位失败");
		Intent intent = new Intent(mContext, LocationAddressActivity.class);
		startActivityForResult(intent, 1001);
		}
	}

	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);

		if (requestCode == 1001 && resultCode == Activity.RESULT_OK) {
			String stauts = data.getStringExtra("stauts");

			restgetPosition();

		}
	}
}
