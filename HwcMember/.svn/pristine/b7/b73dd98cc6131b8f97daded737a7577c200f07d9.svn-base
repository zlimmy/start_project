package com.hwc.member.view.activity.luckdraw;

import android.annotation.SuppressLint;
import android.os.Handler;
import android.os.Message;
import android.view.Gravity;
import android.view.KeyEvent;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import com.huimodel.api.base.ShopPromLottery;
import com.huimodel.api.response.PlatformPromLotteryDrawGetResponse;
import com.huimodel.api.response.PromLotteryDrawResponse;
import com.hwc.member.R;
import com.hwc.member.adapter.PlatformPrizeAdapter;
import com.hwc.member.common.Constant;
import com.hwc.member.common.Member;
import com.hwc.member.presenter.ScratchPresenter;
import com.hwc.member.util.DialogUtil;
import com.hwc.member.view.activity.DialogLoginActivity;
import com.hwc.member.view.activity.view.IScratchView;
import com.hwc.member.view.base.BaseActivity;
import com.hwc.member.widget.MyListView;
import com.hwc.member.widget.dialogplus.DialogPlus;
import com.hwc.member.widget.dialogplus.OnClickListener;
import com.hwc.member.widget.gua.GuagualeView;
import com.hwc.member.widget.header.LXHeadView;
import com.lidroid.xutils.view.annotation.ContentView;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;

/**
 * 刮刮乐
 * @author Administrator
 *
 */
@ContentView(R.layout.activity_scratch)
public class ScratchActivity  extends BaseActivity implements IScratchView {

	@ViewInject(R.id.header)
	private LXHeadView header;
	@ViewInject(R.id.lottery_myview)
	private GuagualeView lotteryMyView;
	@ViewInject(R.id.again_btn)
	private Button again_btn;
	private String promcode, shopnick;
	@ViewInject(R.id.listview)
	private MyListView listview;
	@ViewInject(R.id.shopname)
	private TextView shopname;
	private PlatformPrizeAdapter platformPrizeAdapter;
	private ScratchPresenter pp = new ScratchPresenter(this);
	private PromLotteryDrawResponse pd;
	@ViewInject(R.id.doscratch_tv)
	private TextView doscratch_tv;
	private long sid; 
	
	//判断请求到抽奖结果后是否有刮开
	private boolean flag;
	
	//还需要增加 积分购买次数 跟判断次数是否够，提交奖品
	 
	@SuppressLint("HandlerLeak")
	private Handler handler = new Handler(){
		@Override
		public void handleMessage(Message msg) {
			flag = false;
			if(Member.isNull()){
				T("请先登录！");
				goTo(DialogLoginActivity.class);	 
				return;
			}
			if(pd!=null){
				if(pd.isIs_win()){
					pp.winlotterydraw(pd, sid);	
					DialogUtil.showScratchDialog(context, "恭喜抽中:"+pd.getPrize().getDescript()+"!",true);		
				}else{
					if(pd.getMsg() == null){
						
					}else{
						T(pd.getMsg());
					}				
				}

				VISIBLE(again_btn);
			}

			super.handleMessage(msg);
		}
	};
	
	
	@OnClick(R.id.doscratch_tv)
	public void init_tv(View v){
		lotteryMyView.setHd(handler);
		lotteryMyView.againLotter();
		pp.playGame(sid, promcode);
		GONE(doscratch_tv);
		VISIBLE(again_btn);
	}
	
	//
	@Override
	protected void initView() {
		promcode = getIntent().getStringExtra("0");
		sid = getIntent().getLongExtra("1", -1);
		shopnick = getIntent().getStringExtra("2");
		
		pp.promLotteryDetail(promcode, sid);
//		lotteryMyView.setHd(handler);
		if(Member.isNull()){
			goTo(DialogLoginActivity.class);
			lotteryMyView.setText("");
		}else{
			lotteryMyView.setText("点击开始抽奖");
			again_btn.setText("开始抽奖");
			//pp.playGame(sid, promcode);//开始抽奖
		}
		
		shopname.setText("本次奖品由\t[" + shopnick + "]\t提供");
	}

	@Override
	protected void initListener() {
		setBack(R.drawable.back, null, new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				exitClick();
			}
		});
	}
	
	@OnClick(R.id.again_btn)
	public void again_btnclick(View v){
		if(flag){
			DialogUtil.showDialog(Constant.Dialog, "这次的抽奖结果还没刮开哦，确定不看看吗？", Gravity.CENTER, context, null, new OnClickListener() {
				
				@Override
				public void onClick(DialogPlus dialog, View view) {
					switch (view.getId()) {
					case R.id.cancel:
						break;

					case R.id.confirm:
						lotteryMyView.setHd(handler);
						lotteryMyView.againLotter();
						pp.playGame(sid, promcode);	
						break;
					}
					dialog.dismiss();
				}
			}, null);	
		}else{
			// 再次抽奖判断抽奖次数
			lotteryMyView.setHd(handler);
			lotteryMyView.againLotter();
			pp.playGame(sid, promcode);
		}

	}

	@Override
	public void clearLoadPage() {
		// TODO Auto-generated method stub
	}

	@Override
	public void showErrorPage() {
		// TODO Auto-generated method stub
	}

	@Override
	public void doGame(PlatformPromLotteryDrawGetResponse obj) {
		// TODO Auto-generated method stub
	}

	@Override
	public void initGame(ShopPromLottery ppl) {
		if(!isEmpty(ppl.getProm_descript())){
			header.setTitle(ppl.getProm_descript());
		}
		if(ppl.getRemain_times()>0){
			lotteryMyView.setHd(handler);
		}else{
			doscratch_tv.setText("今日抽奖次数用完");
			doscratch_tv.setClickable(false);
			lotteryMyView.setVisibility(View.GONE);

		}

		platformPrizeAdapter = new PlatformPrizeAdapter(context, ppl.getPrizes(), R.layout.item_promrize, bitmapUtils);
		listview.setAdapter(platformPrizeAdapter);
		platformPrizeAdapter.notifyDataSetChanged();
	}

	@Override
	public void setWinning(PromLotteryDrawResponse p) {
		// TODO Auto-generated method stub
		pd = p;
		if(pd.isSuccess()){

			if(pd.getRemain_times()==0){
				again_btn.setText("加油,最后一次抽奖机会了！");
			}else{
				again_btn.setText("剩余抽奖次数("+pd.getRemain_times()+")");
			}

			
			if(pd.isIs_win()){
				lotteryMyView.setText(pd.getPrize().getDescript());
			}else{
				lotteryMyView.setText("再接再厉");
			}
		}else{//false
			lotteryMyView.setText("今日抽奖次数不足");
			again_btn.setText("今日抽奖次数不足");
			GONE(again_btn);
			VISIBLE(doscratch_tv);

			doscratch_tv.setText("今日抽奖次数用完");
			doscratch_tv.setClickable(false);
			lotteryMyView.setVisibility(View.GONE);
			//doscratch_tv.setText("今日抽奖次数用完");//
			//doscratch_tv.setClickable(false);
			//again_btn.setClickable(false);
			flag = false;
		}
		
		  
	}

	@Override
	public void rest(String str) {
		// TODO Auto-generated method stub
		lotteryMyView.againLotter();
		if(str.equals("")){
			lotteryMyView.setText("再接再厉");
		}else{
			lotteryMyView.setText(str);
		}	
		flag = true;
	}
	  
	/**
	 * 关闭界面前如果没使用本次抽奖提示用户
	 */
	private void exitClick() {
		
		if(pd==null){
			finish();
		}else{
			if(!pd.isSuccess()){
				finish();
				
			}else if(flag){
				DialogUtil.showDialog(Constant.Dialog, "如果现在退出的话将浪费本次抽奖机会哦= =", Gravity.CENTER, context, null, new OnClickListener() {
					
					@Override
					public void onClick(DialogPlus dialog, View view) {
						switch (view.getId()) {
						case R.id.cancel:
							break;

						case R.id.confirm:
							finish();	
							break;
						}
						dialog.dismiss();
					}
				}, null);	
			}else{
				finish();
			}
		}
	}
	
	/**
	 * 菜单、返回键响应
	 */
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		// TODO Auto-generated method stub
		if (keyCode == KeyEvent.KEYCODE_BACK) {
			exitClick();
		}
		return false;
	}

	@Override
	public void goLogin() {
		goTo(DialogLoginActivity.class);
	}
	
}
