/**
 * 
 */
package com.hwc.member.view.fragment;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;

import android.content.Intent;
import android.view.Gravity;
import android.view.View;
import android.widget.Button;

import com.huimodel.api.base.PlatformPromLottery;
import com.huimodel.api.response.PlatformPromLotteryDrawGetResponse;
import com.huimodel.api.response.PromLotteryDrawResponse;
import com.huimodel.api.response.PromotionADGetResponse;
import com.hwc.member.R;
import com.hwc.member.bean.GetTuiMessage;
import com.hwc.member.common.Constant;
import com.hwc.member.common.Member;
import com.hwc.member.presenter.PlatformPromotionPresenter;
import com.hwc.member.presenter.SubjectProductPresenter;
import com.hwc.member.util.CacheDataUtil;
import com.hwc.member.util.DialogUtil;
import com.hwc.member.util.NotificationAdmain;
import com.hwc.member.view.activity.DialogLoginActivity;
import com.hwc.member.view.activity.LoginActivity;
import com.hwc.member.view.activity.MyPlayActivity;
import com.hwc.member.view.activity.SearchActivity;
import com.hwc.member.view.activity.luckdraw.PlatFormScratchActivity;
import com.hwc.member.view.activity.luckdraw.PlatFormTurntableActivity;
import com.hwc.member.view.activity.view.IPlatformPromotionView;
import com.hwc.member.view.base.FormBaseFragment;
import com.hwc.member.widget.SimpleHUD;
import com.hwc.member.widget.dialogplus.DialogPlus;
import com.hwc.member.widget.dialogplus.OnClickListener;
import com.lidroid.xutils.DbUtils;
import com.lidroid.xutils.exception.DbException;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.umeng.socialize.bean.SHARE_MEDIA;
import com.umeng.socialize.bean.SocializeConfig;
import com.umeng.socialize.controller.UMServiceFactory;
import com.umeng.socialize.controller.UMSocialService;
import com.umeng.socialize.media.UMImage;
import com.umeng.socialize.sso.UMSsoHandler;
import com.umeng.socialize.weixin.controller.UMWXHandler;
import com.umeng.socialize.weixin.media.CircleShareContent;
import com.umeng.socialize.weixin.media.WeiXinShareContent;
//import com.hwc.member.view.activity.MapActivity;

/**
 * @author FZ
 */
public class Test_Fragment extends FormBaseFragment implements IPlatformPromotionView{

	// wx967daebe835fbeac是你在微信开发平台注册应用的AppID, 这里需要替换成你注册的AppID
	String appID = "wx70242adf2b8b09f8";
	String appSecret = "d4624c36b6795d1d99dcf0547af5443d";
    private final UMSocialService mController = UMServiceFactory.getUMSocialService("com.umeng.share");
    private DbUtils mda;
    private List<GetTuiMessage> msg;
	@ViewInject(R.id.create_but)
	public Button create_but;
	PlatformPromotionPresenter platformPromotionPresenter = new PlatformPromotionPresenter(this);
	SubjectProductPresenter subjectProductPresenter = new SubjectProductPresenter(this);
	@Override
	public int getLayoutId() {
		return R.layout.fm_test;
	}

	@OnClick(R.id.dialoglogin_bt)
	public void dialoglogin_bt(View v){
		
		goTo(DialogLoginActivity.class);
	}
	
	
	@OnClick(R.id.pay_bt)
	public void pay_bt(View v){
		goTo(MyPlayActivity.class);
	}
	
	
	
	@OnClick(R.id.game_bt)
	public void game_bt(View v){
		
		platformPromotionPresenter.getPlatformPromotion();
	}
	
	@OnClick(R.id.gameinfo_bt)
	public void gameinfo_bt(View v){
		goTo(PlatFormScratchActivity.class);
		//platformPromotionPresenter.promLotteryDetail("111");
	}
	
	
	@OnClick(R.id.leimu_bt)
	public void leimu_bt(View v){
		subjectProductPresenter.getSubjectProduct();
	}
	
	
	
	
	
	
	
	@OnClick(R.id.setData_bt)
	public void setData_bt(View v){
		mda = DbUtils.create(mContext,Constant.dbName);
		msg = new ArrayList<GetTuiMessage>();
		for(int i =0;i<45;i++){
	    GetTuiMessage  gm = new GetTuiMessage();
	     gm.setIds(i);
	     gm.setId(i+"");
		 gm.setTitle("消息标题"+i);
		 gm.setMsgbody("消息体"+i);
		 gm.setActivity(111);
		 gm.setParamet(null);
		 gm.setIshow(false);
		 gm.setSendTime(getTime());
		 gm.setType(0);
		 msg.add(gm);
		}
		
		
		
		try {
			mda.saveAll(msg);
		} catch (DbException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	@OnClick(R.id.getData_bt)
	public void getData_bt(View v){
		mda = DbUtils.create(mContext,Constant.dbName);
		
		List<GetTuiMessage> msg = null;
		try {
			mda.deleteAll(GetTuiMessage.class);
			msg = mda.findAll(GetTuiMessage.class);
		} catch (DbException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println(gson.toJson(msg));
	}
	
	
	
	@Override
	protected void init() {
		// TODO Auto-generated method stub
		// 添加微信平台
				UMWXHandler wxHandler = new UMWXHandler(mContext,appID,appSecret);
				wxHandler.addToSocialSDK();
				// 支持微信朋友圈
				UMWXHandler wxCircleHandler = new UMWXHandler(mContext,appID,appSecret);
				wxCircleHandler.setToCircle(true);
				wxCircleHandler.addToSocialSDK();
				UMImage localImage  = new UMImage(mContext, "https://mmbiz.qlogo.cn/mmbiz/jW1SVC0FibZQ4SQ8GaiaPCV0AUS4ehtzKmHSuwcHVMNvEUdtnL6p8fhKfQVE1Kgicn6IWmykySNawKWQl4naf5Tiaw/0?wx_fmt=png");
				
				//设置微信好友分享内容
				WeiXinShareContent weixinContent = new WeiXinShareContent();
				//设置分享文字
				weixinContent.setShareContent("惠万村分享测试，微信");
				//设置title
				weixinContent.setTitle("惠万村");
				//设置分享内容跳转URL
				weixinContent.setTargetUrl("https://www.baidu.com/");
				//设置分享图片
				weixinContent.setShareImage(localImage);
				mController.setShareMedia(weixinContent);
				
				
		        // 设置朋友圈分享的内容
		        CircleShareContent circleMedia = new CircleShareContent();
		        
		        circleMedia.setShareContent("惠万村分享测试，微信");
		        circleMedia.setTitle("惠万村");
		        circleMedia.setShareMedia(localImage);
		        circleMedia.setTargetUrl("https://www.baidu.com/");
		        mController.setShareMedia(circleMedia);

	}
	
	
	@OnClick(R.id.share_bt)
	public void share_bt(View v){
		
		 mController.getConfig().setPlatforms(SHARE_MEDIA.WEIXIN,SHARE_MEDIA.WEIXIN_CIRCLE,SHARE_MEDIA.SMS);
		 
	       mController.openShare(getActivity(), false);
	}
	
	
	
	@OnClick(R.id.search_bt)
	public void search_bt(View v){
		goTo(SearchActivity.class);
	}
	
	
	@OnClick(R.id.create_but)
	public void create_but(View v){
		SimpleHUD.showLoadingMessage(mContext, "努力加载中...", true);
	}
	
	@OnClick(R.id.login_but)
	public void login_but(View v){
		
		goTo(LoginActivity.class);
	}
	
	
	@OnClick(R.id.map_but)
	public void map_but(View v){
		
	//	goTo(MapActivity.class);
	}
	
	
	
	@OnClick(R.id.dialog_bt)
	public void dialog_bt(View v){
		DialogUtil.showDialog(Constant.Dialog, "1111111111111", Gravity.CENTER, mContext, null, new OnClickListener() {
			
			@Override
			public void onClick(DialogPlus dialog, View view) {
				switch (view.getId()) {
				case R.id.cancel:
					SimpleHUD.showInfoMessage(mContext, "这是取消按钮");
					break;

				case R.id.confirm:
					SimpleHUD.showInfoMessage(mContext, "这是确定按钮");
					break;
				}
				dialog.dismiss();
			}
		}, null);
	}
	
	@OnClick(R.id.list_bt)
	public void list_bt(View v){
//		SimpleAdapter adapter = new SimpleAdapter(mContext, getData(), R.layout.simple_list_item, null);
//		DialogUtil.showDialog(Constant.listDialog, null, Gravity.CENTER, mContext, adapter, null, new OnItemClickListener() {
//			
//			@Override
//			public void onItemClick(DialogPlus dialog, Object item, View view,
//					int position) {
//				dialog.dismiss();
//				SimpleHUD.showInfoMessage(mContext, position+"");
//			}
//		});
	}
	
	@OnClick(R.id.grid_bt)
	public void grid_bt(View v){
//		SimpleAdapter adapter = new SimpleAdapter(mContext, getData(), R.layout.simple_grid_items, null);
//		DialogUtil.showDialog(Constant.gridDialog, null, Gravity.TOP, mContext, adapter, null, new OnItemClickListener() {
//			
//			@Override
//			public void onItemClick(DialogPlus dialog, Object item, View view,
//					int position) {
//				dialog.dismiss();
//				SimpleHUD.showInfoMessage(mContext, position+"");
//			}
//		});
	}
	
	private List<Map<String, Object>> getData(){
		List<Map<String, Object>> list = new ArrayList<Map<String,Object>>();
		for (int i = 0; i < 6; i++) {
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("title", i);
			list.add(map);
		}
		return list;		
	}
	 
	
	
	NotificationAdmain admain;
	static int NOTIFICATION_ID = 1000000;
	Intent intent;
	int smallIcon = R.drawable.icon_cu;
	String ticker = "来了条新的通知"; 
	Random random = new Random();
	@OnClick(R.id.notific_but)
	public void notific_but(View v){
		intent = new Intent(mContext, LoginActivity.class);
		admain = new NotificationAdmain(mContext,random.nextInt(10000));
		admain.normal_notification(intent, smallIcon, ticker, "大促销", "手机大特价");
		
		
	}
	

	@OnClick(R.id.open_but)
	public void open_but(View v){
		goTo(SearchActivity.class);
	}
	
	
	
	
	@OnClick(R.id.hc_but)
	public void hc_but(View v){
		CacheDataUtil cacheDataUtil = CacheDataUtil.getInstance(mContext);
		PromotionADGetResponse pd = new PromotionADGetResponse();
		pd.setMsg("dddd11111111111");
		cacheDataUtil.saveJson("sok", pd, 11);
		SimpleHUD.showInfoMessage(mContext, "缓存成功有效时间1分钟");
		
	}
 
	@OnClick(R.id.get_but)
	public void get_but(View v){
		CacheDataUtil cacheDataUtil = CacheDataUtil.getInstance(mContext);
		System.out.println(cacheDataUtil.getStringByKey("dsok")==null?"空的":"不为空");
		SimpleHUD.showInfoMessage(mContext, "--"+cacheDataUtil.getStringByKey("sok"));
		
		cacheDataUtil.clearAllData();
	}

	
	
	
	
	
	
	
	@Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        UMSsoHandler ssoHandler = SocializeConfig.getSocializeConfig().getSsoHandler(requestCode);
        if (ssoHandler != null) {
            ssoHandler.authorizeCallBack(requestCode, resultCode, data);
        }
    }


	@Override
	public void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		 T(Member.getInstance().getUser_id());
	}

	@Override
	public void clearLoadPage() {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void showErrorPage() {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void doGame(PlatformPromLotteryDrawGetResponse obj) {
		// TODO Auto-generated method stub
		PlatformPromLottery pp = null;
		if(obj.getPromlottery().size()>0){
			pp = obj.getPromlottery().get(0);
			if(pp.getProm_cat().equals("SCR")){
				goTo(PlatFormScratchActivity.class, pp.getProm_code());
			}else{
				goTo(PlatFormTurntableActivity.class,  pp.getProm_code());
			}
		}
	}




	@Override
	public void initGame(PlatformPromLottery platformPromLottery) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setWinning(PromLotteryDrawResponse p) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void rest(String desc) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void goLogin() {
		// TODO Auto-generated method stub
		
	}
}
