package com.hwc.member.view.activity;

import java.io.IOException;
import java.math.BigDecimal;
import java.text.NumberFormat;
import java.util.Locale;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.ComponentName;
import android.content.Intent;
import android.os.AsyncTask;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import com.google.gson.Gson;
import com.hwc.member.R;
import com.hwc.member.view.base.BaseActivity;
import com.lidroid.xutils.view.annotation.ContentView;
import com.pingplusplus.android.PaymentActivity;
import com.pingplusplus.android.PingppLog;
import com.squareup.okhttp.MediaType;
import com.squareup.okhttp.OkHttpClient;
import com.squareup.okhttp.Request;
import com.squareup.okhttp.RequestBody;
import com.squareup.okhttp.Response;
@ContentView(R.layout.activity_pay)
public class MyPlayActivity extends BaseActivity implements View.OnClickListener{
	
	private static String YOUR_URL ="http://dev.huiwancun.net:806/HwcService/orders/payOrder.shtml";
	public static final String URL = YOUR_URL;
    private static final int REQUEST_CODE_PAYMENT = 1;
    private static final String CHANNEL_WECHAT = "wx";
    private static final String CHANNEL_ALIPAY = "alipay";
    private EditText amountEditText;
    private EditText orderid;
    private Button wechatButton;
    private Button alipayButton;
    private String currentAmount = "";
   
	@Override
	protected void initView() {		  
        amountEditText = (EditText) findViewById(R.id.amountEditText);
        wechatButton = (Button) findViewById(R.id.wechatButton);
        alipayButton = (Button) findViewById(R.id.alipayButton);
        wechatButton.setOnClickListener(MyPlayActivity.this);
        alipayButton.setOnClickListener(MyPlayActivity.this);
        PingppLog.DEBUG = true;
        amountEditText.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
            }

            @Override
            public void afterTextChanged(Editable s) {
                if (!s.toString().equals(currentAmount)) {
                    amountEditText.removeTextChangedListener(this);
                    String replaceable = String.format("[%s, \\s.]", NumberFormat.getCurrencyInstance(Locale.CHINA).getCurrency().getSymbol(Locale.CHINA));
                    String cleanString = s.toString().replaceAll(replaceable, "");

                    if (cleanString.equals("") || new BigDecimal(cleanString).toString().equals("0")) {
                        amountEditText.setText(null);
                    } else {
                        double parsed = Double.parseDouble(cleanString);
                        String formatted = NumberFormat.getCurrencyInstance(Locale.CHINA).format((parsed / 100));
                        currentAmount = formatted;
                        amountEditText.setText(formatted);
                        amountEditText.setSelection(formatted.length());
                    }
                    amountEditText.addTextChangedListener(this);
                }
            }
        });
    }
  
	@Override
	protected void initListener() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onClick(View view) {
        String amountText = amountEditText.getText().toString();
        Long rid = Long.parseLong(orderid.getText().toString());
        if (amountText.equals("")) return;

        String replaceable = String.format("[%s, \\s.]", NumberFormat.getCurrencyInstance(Locale.CHINA).getCurrency().getSymbol(Locale.CHINA));
        String cleanString = amountText.toString().replaceAll(replaceable, "");
        int amount = Integer.valueOf(new BigDecimal(cleanString).toString());

        // 支付宝，微信支付，银联，百度钱包 按键的点击响应处理
        if (view.getId() == R.id.alipayButton) {
            new PaymentTask().execute(new PaymentRequest(CHANNEL_ALIPAY, amount,rid));
        } else if (view.getId() == R.id.wechatButton) {
            new PaymentTask().execute(new PaymentRequest(CHANNEL_WECHAT, amount,rid));
        }
		
	}

	  class PaymentTask extends AsyncTask<PaymentRequest, Void, String> {

	        @Override
	        protected void onPreExecute() {
	            //按键点击之后的禁用，防止重复点击
	            wechatButton.setOnClickListener(null);
	            alipayButton.setOnClickListener(null);
	        }

	        @Override
	        protected String doInBackground(PaymentRequest... pr) {

	            PaymentRequest paymentRequest = pr[0];
	            
	            String data = null;
	            String json = new Gson().toJson(paymentRequest);
	            try {
	                //向Your Ping++ Server SDK请求数据
	                data = postJson(URL, json);
	            } catch (Exception e) {
	                e.printStackTrace();
	            }
	            return data;
	        }

	        /**
	         * 获得服务端的charge，调用ping++ sdk。
	         */
	        @Override
	        protected void onPostExecute(String data) {
	        	if(null==data){
	        		showMsg("请求出错", "请检查URL", "URL无法获取charge");
	        		return;
	        	}
	        	Log.d("charge", data);
	            Intent intent = new Intent();
	            String packageName = getPackageName();
	            ComponentName componentName = new ComponentName(packageName, packageName + ".wxapi.WXPayEntryActivity");
	            intent.setComponent(componentName);
	            intent.putExtra(PaymentActivity.EXTRA_CHARGE, data);
	            startActivityForResult(intent, REQUEST_CODE_PAYMENT);
	        }

	    }
	    
		/**
		 * onActivityResult 获得支付结果，如果支付成功，服务器会收到ping++ 服务器发送的异步通知。
		 * 最终支付成功根据异步通知为准
		 */
	    protected void onActivityResult(int requestCode, int resultCode, Intent data){
	        wechatButton.setOnClickListener(MyPlayActivity.this);
	        alipayButton.setOnClickListener(MyPlayActivity.this);
	        //支付页面返回处理
	        if (requestCode == REQUEST_CODE_PAYMENT) {
	            if (resultCode == Activity.RESULT_OK) {
	                String result = data.getExtras().getString("pay_result");
	                String errorMsg = data.getExtras().getString("error_msg"); // 错误信息
	                String extraMsg = data.getExtras().getString("extra_msg"); // 错误信息
	                showMsg(result, errorMsg, extraMsg);
	            }
	        }
	    }
	    
	    public void showMsg(String title, String msg1, String msg2) {
	    	String str = "";
	    	if(title.equals("success")){
	    		str="支付成功";
	    	}else if(title.equals("fail")){
	    		str="支付失败";
	    	}else if(title.equals("cancel")){
	    		str="取消支付";
	    	}else{
	    		str="系统异常";
	    	}
	    	
	    	
	    	if (null !=msg1 && msg1.length() != 0) {
	    		str += "\n" + msg1;
	    	}
	    	if (null !=msg2 && msg2.length() != 0) {
	    		str += "\n" + msg2;
	    	}
	    	AlertDialog.Builder builder = new Builder(MyPlayActivity.this);
	    	builder.setMessage(str);
	    	builder.setTitle("提示");
	    	builder.setPositiveButton("OK", null);
	    	builder.create().show();
	    }

	    private static String postJson(String url, String json) throws IOException {
	        MediaType type = MediaType.parse("application/json; charset=utf-8");
	        RequestBody body = RequestBody.create(type, json);
	        Request request = new Request.Builder().url(url).post(body).build();
	       
	        OkHttpClient client = new OkHttpClient();
	        Response response = client.newCall(request).execute();

	        return response.body().string();
	    }

	    class PaymentRequest {
	        String channel;
	        String paycode;
	        int amount;
	        Long rid;

	        public PaymentRequest(String channel, int amount,Long rid) {
	            this.channel = channel;
	            this.paycode = channel;
	            this.amount = amount;
	            this.rid = rid;
	        }
	    }

	}