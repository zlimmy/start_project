package com.hwc.member.view.activity.shop;

import android.text.TextUtils;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.hwc.member.R;
import com.hwc.member.adapter.HotSearchAdapter;
import com.hwc.member.adapter.ProductGridAdapter;
import com.hwc.member.adapter.SearchAdapter;
import com.hwc.member.adapter.SearchGoodsAdapter;
import com.hwc.member.anno.ViewTransform;
import com.hwc.member.presenter.SearchShopGoodsPresenter;
import com.hwc.member.util.MyRefreshListener;
import com.hwc.member.util.MyRefreshListener.Callback;
import com.hwc.member.view.activity.product.NewProductInfoActivity;
import com.hwc.member.view.activity.view.ISearchView;
import com.hwc.member.view.base.BaseActivity;
import com.hwc.member.widget.PullToRefreshLayout;
import com.hwc.member.widget.PullableGridView;
import com.lidroid.xutils.view.annotation.ContentView;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.lidroid.xutils.view.annotation.event.OnItemClick;

@ContentView(R.layout.activity_search_shop_goods)
public class SearchShopGoodsActivity extends BaseActivity implements ISearchView {

	@ViewInject(R.id.quit_bt)
	private Button quit_bt;
	@ViewInject(R.id.search_et)
	@ViewTransform(width = 180)
	private EditText search_et;
	@ViewInject(R.id.gridview)
	private PullableGridView gridview;
	@ViewInject(R.id.refresh_view)
	private PullToRefreshLayout refresh_view;
	
	private int mIndex = 1;
	
	private MyRefreshListener myRefreshListener;
	
	private SearchShopGoodsPresenter presenter = new SearchShopGoodsPresenter(this);
	
	@ViewInject(R.id.nodata_page)
	private View nodata_page;
	@ViewInject(R.id.nodata_tv)
	private TextView nodata_tv;
	@ViewInject(R.id.nodata_but)
	private Button nodata_but;
	
	private String query;
	private long sid;
	
	@Override
	protected void initView() {
		sid = getIntent().getLongExtra("0", -1);
	}

	@Override
	protected void initListener() {
		myRefreshListener = new MyRefreshListener(SearchShopGoodsActivity.this, new Callback() {
			
			@Override
			public void refresh(PullToRefreshLayout pullToRefreshLayout) {
				pullToRefreshLayout.refreshFinish(PullToRefreshLayout.SUCCEED);
			}
			
			@Override
			public void loadMore(PullToRefreshLayout pullToRefreshLayout) {
				mIndex += 1;
				presenter.searchProducts(query, mIndex, sid, pullToRefreshLayout);
			}
		});
		refresh_view.setOnRefreshListener(myRefreshListener);
	}

	@Override
	public void clearLoadPage() {}

	@Override
	public void showErrorPage() {
		VISIBLE(nodata_page);
		nodata_tv.setText("暂无您要搜索的商品!");
		INVISIBLE(nodata_but);
	}

	@Override
	public void setGridAdapter2(SearchAdapter adapter) {}

	@Override
	public void getListSuccess(SearchGoodsAdapter adapter) {
		
	}
	
	@OnItemClick(R.id.gridview)
	public void onGridItemClick(AdapterView<?> parent, View view,
			int position, long id) {
		goTo(NewProductInfoActivity.class, presenter.adapter.getItem(position).getPid(), presenter.adapter.getItem(position).getShop_id(), presenter.adapter.getItem(position).getName());
	}
	
	// 搜索
	@OnClick(R.id.quit_bt)
	public void forgetQuit(View v) {
		mIndex = 1;
		query = getViewValue(search_et);
//		presenter.searchProducts(query, mIndex, sid, null);
		if(TextUtils.isEmpty(query)){
			T("请输入关键字！");
		}else {
			goTo(true,AllGoodsActivity.class, sid,-1,query);
		}
	}

	@Override
	public void setShopGrid(ProductGridAdapter adapter) {
		GONE(nodata_page);
		gridview.setAdapter(adapter);
	}

	@Override
	public void setIsCanMore(boolean b) {}

	@Override
	public void setHotSearchAdapter(HotSearchAdapter adapter) {
		
	}
}
