package com.hwc.member.util;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import android.app.Activity;
import android.os.Process;

/**
 * Activity采集器.
 * @author FZ
 */ 
public class UtilActivity {
	
	private UtilActivity(){
		
	}
	
	/**
	 * 
	 */
	private static List<Activity> activities = new ArrayList<Activity>();
	
	/**
	 * @param activity
	 */
	public static void addActivity(Activity activity){
		if(!activities.contains(activity)){
			activities.add(activity);
		}
	}
	
	/**
	 * @param activity
	 */
	public static void removeActivity(Activity activity){
		activities.remove(activity);
	}
	
	/**
	 * 杀死进程
	 */
	public static void finishAll(){
		for(Activity activity : activities){
			activity.finish();
		}
		Process.killProcess(Process.myPid());
	}
	
	/**
	 * 除第一个界面外关闭所有界面（LoginActivity处在栈底）
	 */
	public static void onlyLogin(){
		for (int i = 0; i < activities.size(); i++) {
			if(i != 0){
				activities.get(i).finish();
			}
		}
	}
	
	/**
	 * 关闭从栈顶开始的num个界面
	 */
	public static void finishNum(int num){
		Collections.reverse(activities);
		for (int i = 0; i < num; i++) {
			activities.get(i).finish();
		}
		Collections.reverse(activities);
	}
	
	/**
	 * 得到最上面一个Activity
	 */
	public static Activity getUp(){
		return activities.get(activities.size() - 1);
	}
	
	/**
	 * 判断进程是否已经被杀死	true:已杀死	false:未杀死
	 */
	public static boolean isProcessKill(){
		return activities.size() == 0 || activities == null;
	}
}
