package com.hwc.member.util;

import com.hwc.member.R;
import com.hwc.member.common.Constant;

import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.support.v4.app.NotificationCompat;
import android.widget.RemoteViews;

/**
 *  消息通知用
 * @author Administrator
 *
 */
public class NotificationUtil {
	

	public static NotificationManager mNotificationManager;
	private static NotificationCompat.Builder mBuilder;
	private static NotificationUtil notificationUtil = null;
	private int notifyId = 100;
	private static Context mContext;
	
 
	 public static synchronized NotificationUtil getInstance(Context context) {
	
		 if(notificationUtil == null) {
			 notificationUtil = new NotificationUtil();
			 mContext = context;
			 init();
//			ToastUtil.show(mContext, "第一次创建");
	 	}
	 
	 	return notificationUtil; 
	 }
	 
	 

	
	
	
	public static void init(){
		mNotificationManager = (NotificationManager) mContext.getSystemService(Context.NOTIFICATION_SERVICE);
		mBuilder = new NotificationCompat.Builder(mContext);
		mBuilder.setContentTitle("ddd")
				.setContentText("ddd")
				.setContentIntent(getDefalutIntent(Notification.FLAG_AUTO_CANCEL,mContext))
//				.setNumber(number)//显示数量
				.setTicker("ddd")//通知首次出现在通知栏，带上升动画效果的
				.setWhen(System.currentTimeMillis())//通知产生的时间，会在通知信息里显示
				.setPriority(Notification.PRIORITY_DEFAULT)//设置该通知优先级
				.setAutoCancel(true)//设置这个标志当用户单击面板就可以让通知将自动取消  
				.setOngoing(false)//ture，设置他为一个正在进行的通知。他们通常是用来表示一个后台任务,用户积极参与(如播放音乐)或以某种方式正在等待,因此占用设备(如一个文件下载,同步操作,主动网络连接)
				.setDefaults(Notification.DEFAULT_ALL)//向通知添加声音、闪灯和振动效果的最简单、最一致的方式是使用当前的用户默认设置，使用defaults属性，可以组合：
				//Notification.DEFAULT_ALL  Notification.DEFAULT_SOUND 添加声音 // requires VIBRATE permission
				
				.setSmallIcon(R.drawable.ic_launcher);
	}
	

	
	
	/** 显示通知栏 */
	public void showSimpleNotify(String title,String msg,String adstr){
	 
			mBuilder.setContentTitle(title)
				.setContentText(msg)
				.setTicker(adstr);//通知首次出现在通知栏，带上升动画效果的
			mNotificationManager.notify(notifyId, mBuilder.build());
//		mNotification.notify(getResources().getString(R.string.app_name), notiId, mBuilder.build());
	}
	
	
	


	
	
	public static PendingIntent getDefalutIntent(int flags,Context context){
		PendingIntent pendingIntent= PendingIntent.getActivity(context, 1, new Intent(), flags);
		return pendingIntent;
	}
}
