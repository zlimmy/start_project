package com.hwc.member.util;

import android.annotation.SuppressLint;
import android.content.Context;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.widget.Toast;
import cn.smssdk.EventHandler;
import cn.smssdk.SMSSDK;

import com.hwc.member.common.Constant;

@SuppressLint("HandlerLeak")
public class SMSUtil {
	
	private static Context context;
	
	private Callback callback;
	
	public SMSUtil(Context context){
		SMSUtil.context = context;
	}

	public void initSMS(){
		SMSSDK.initSDK(context,Constant.APPKEY,Constant.APPSECRET);
		EventHandler eh=new EventHandler(){

			@Override
			public void afterEvent(int event, int result, Object data) {
				
				Message msg = new Message();
				msg.arg1 = event;
				msg.arg2 = result;
				msg.obj = data;
				handler.sendMessage(msg);
				
			}
			
		};
		SMSSDK.registerEventHandler(eh);
	}
	
	Handler handler=new Handler(){

		@Override
		public void handleMessage(Message msg) {
			// TODO Auto-generated method stub
			super.handleMessage(msg);
			int event = msg.arg1;
			int result = msg.arg2;
			Object data = msg.obj;
			Log.e("event", "event="+event);
			if (result == SMSSDK.RESULT_COMPLETE) {
				//短信注册成功后，返回MainActivity,然后提示新好友
				if (event == SMSSDK.EVENT_SUBMIT_VERIFICATION_CODE) {//提交验证码成功
					Toast.makeText(context, "验证成功", Toast.LENGTH_SHORT).show();
					callback.goToRegist();
				} else if (event == SMSSDK.EVENT_GET_VERIFICATION_CODE){
					Toast.makeText(context, "验证码已经发送", Toast.LENGTH_SHORT).show();
					callback.getCheckCode();
				}
			} else {
				((Throwable)data).printStackTrace(); 
				Toast.makeText(context, "失败", Toast.LENGTH_SHORT).show();
			}
			
		}
		
	};
	
	/** 回调接口 **/
	public interface Callback {

		/** 验证手机成功回调该函数 **/
		void goToRegist();
		
		/** 获取验证码成功回调该函数 **/
		void getCheckCode();
	}
	
	/** 注册监听接口 **/
	public void registerCallback(Callback callback) {
		this.callback = callback;
	}
	
}
